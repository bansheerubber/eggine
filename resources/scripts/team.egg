package destinations {
	function ChunkContainer::selectCharacter(%this, %character) {
		%test = getChunkContainer().getSelectedCharacter();
		if(isObject(%test)) {
			%test.getDestinations().hideBorder();
		}
		
		Parent::selectCharacter(%this, %character);

		if(%character.maxMoves == "") {
			%character.maxMoves = 5;
			%character.moves = 5;
		}

		%character.getDestinations().showBorder();
	}
};

function Team::selectNextCharacter(%this, %state) {
	if(!%state) {
		return;
	}
	
	%this.selectedIndex = (%this.selectedIndex + 1) % %this.size();
	
	%character = %this.get(%this.selectedIndex);
	getChunkContainer().selectCharacter(%character);
	getActiveCamera().pan(getActiveCamera().getPosition(), tileToScreen(%character.getPosition()), 0.2);
}

function Team::selectPreviousCharacter(%this, %state) {
	if(!%state) {
		return;
	}
	
	%this.selectedIndex--;
	if(%this.selectedIndex < 0) {
		%this.selectedIndex = %this.size() - 1;
	}

	%character = %this.get(%this.selectedIndex);
	getChunkContainer().selectCharacter(%character);
	getActiveCamera().pan(getActiveCamera().getPosition(), tileToScreen(%character.getPosition()), 0.2);
}

function team() {
	%team = getChunkContainer().getPlayerTeam();
	%team.addKeybind("team.selectPreviousCharacter", "[", "selectPreviousCharacter");
	%team.addKeybind("team.selectNextCharacter", "]", "selectNextCharacter");
	%team.addKeybind("team.selectPreviousCharacter", "left-button", "selectPreviousCharacter");
	%team.addKeybind("team.selectNextCharacter", "right-button", "selectNextCharacter");
}

schedule(100, "team");
