class SwitchTeamElement inherits HTMLElement;

function SwitchTeamElement::onClick(%this) {
	getChunkContainer().selectCharacter(null);
	selectTarget(null);
	
	if($Team::Player == getChunkContainer().getPlayerTeam()) {
		getChunkContainer().setPlayerTeam($Team::Enemy);
		getChunkContainer().setEnemyTeam($Team::Player);
		echo("set enemy team as primary");
	}
	else {
		getChunkContainer().setPlayerTeam($Team::Player);
		getChunkContainer().setEnemyTeam($Team::Enemy);
		echo("set player team as primary");
	}
}

function Team::selectNextCharacter(%this, %state) {
	if(!%state) {
		return;
	}
	
	%this.selectedIndex = (%this.selectedIndex + 1) % %this.size();
	
	%character = %this.get(%this.selectedIndex);
	getChunkContainer().selectCharacter(%character);
	getActiveCamera().pan(getActiveCamera().getPosition(), tileToScreen(%character.getPosition()), 0.2);

	playSound("SwapUnit");
}

function Team::selectPreviousCharacter(%this, %state) {
	if(!%state) {
		return;
	}
	
	%this.selectedIndex--;
	if(%this.selectedIndex < 0) {
		%this.selectedIndex = %this.size() - 1;
	}

	%character = %this.get(%this.selectedIndex);
	getChunkContainer().selectCharacter(%character);
	getActiveCamera().pan(getActiveCamera().getPosition(), tileToScreen(%character.getPosition()), 0.2);

	playSound("SwapUnit");
}

function teamInit() {
	%team = getChunkContainer().getPlayerTeam();
	%team.addKeybind("team.selectPreviousCharacter", "[", "selectPreviousCharacter");
	%team.addKeybind("team.selectNextCharacter", "]", "selectNextCharacter");
	%team.addKeybind("team.selectPreviousCharacter", "left-button", "selectPreviousCharacter");
	%team.addKeybind("team.selectNextCharacter", "right-button", "selectNextCharacter");

	$Team::Player = getChunkContainer().getPlayerTeam();
	$Team::Enemy = getChunkContainer().getEnemyTeam();
}
