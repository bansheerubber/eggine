class TrainedShotAbility inherits Ability;

function TrainedShotAbility::onAdd(%this) {
	Parent::onAdd(%this);

	%this.name = "Trained Shot";
	%this.icon = "accuracy.png";
}

function TrainedShotAbility::use(%this, %target) {
	Parent::use(%this, %target);

	if(%this.roll(%target)) {
		%target.addHealth(-5);
	}

	playSound("SnapshotFire");
}

function TrainedShotAbility::accuracy(%this, %target) {
	if(!%target) {
		return 0;
	}
	
	%range = 20;
	%accuracy = (-1 / mPow(%range, 2)) * mPow(distance(%target.getPosition(), %this.owner.getPosition()), 2) + 1;
	if(%accuracy < 0.03) {
		return 0.03;
	}
	return %accuracy;
}

function TrainedShotAbility::cost(%this, %target) {
	return 2;
}

function TrainedShotAbility::usable(%this, %target) {
	%result = %target != null && %target.inCover(%this.owner) != 2 && Parent::usable(%this, %target);
	return %result;
}

function TrainedShotAbility::description(%this, %target) {
	%table = "<table class=\"ability-stats-table\"><tr><td>Accuracy:" SPC mFloor(%this.accuracy(%target) * 100) @ "%</td></tr><tr><td>Damage: 5</td></tr></table>";
	%html = "<div>An accurate, high-damage shot against an enemy</div>";
	if(%this.usable(%target)) {
		return %html @ %table;
	}
	else {
		return %html;
	}
}

function TrainedShotAbility::actionName(%this, %target) {
	return "Fire";
}
