class OverwatchAbility inherits Ability {
	name = "Overwatch";
	icon = "overwatch.png";

	function overwatch(%this, %target) {
		if(%target.inCover(%this.owner) == $Cover::Full) {
			return;
		}
		
		%this.owner.overwatch = false;

		if(isObject(%this.owner.overwatchIcon)) {
			%this.owner.overwatchIcon.delete();
		}

		if(%this.roll(%target)) {
			%target.addHealth(-2);
		}
		else {
			%target.showMiss();
		}

		playSound("SnapshotFire");
	}

	function use(%this, %target) {
		Parent::use(%this, %target);
		%this.owner.overwatch = true;

		if(isObject(%this.owner.overwatchIcon)) {
			%this.owner.overwatchIcon.delete();
		}

		%this.owner.overwatchIcon = new InterweavedTile();
		%this.owner.overwatchIcon.setZIndex(50);
		%this.owner.overwatchIcon.setXRay(2);
		%this.owner.overwatchIcon.setTexture(36);
		%this.owner.overwatchIcon.setPosition(%this.owner.getPosition());

		playSound("OverwatchUse");
	}

	function accuracy(%this, %target) {
		if(!%target) {
			return 0;
		}
		
		%range = 20;
		%accuracy = (-1 / mPow(%range, 0.7)) * mPow(distance(%target.getPosition(), %this.owner.getPosition()), 0.7) + 1;
		%accuracy *= getCoverAccuracyMod(%target.inCover(%this.owner));
		if(%accuracy < 0.03) {
			return 0.03;
		}
		return %accuracy;
	}

	function cost(%this, %target) {
		%ap = %this.owner.ap;
		if(%ap == 0) {
			return %ap = 1;
		}
		return %ap;
	}

	function usable(%this, %target) {
		return Parent::usable(%this, %target);
	}

	function description(%this, %target) {
		return "<div>Take a shot at an enemy after they have finished moving. Activating overwatch uses all of your unit's AP.</div>";
	}

	function actionName(%this, %target) {
		return "Overwatch";
	}
};
