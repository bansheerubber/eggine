exec("ability.egg");
exec("tile.egg");
exec("abilities/snapshot.egg");
exec("team.egg");
exec("unit.egg");
exec("editor.egg");
exec("targetting.egg");

$Unit::HoveredTile = null;

function HTMLElement::onClick(%this) {
	
}

function distance(%a, %b) {
	return mSqrt(mPow(%a[0] - %b[0], 2) + mPow(%a[1] - %b[1], 2) + mPow(%a[2] - %b[2], 2));
}

function isTileSelectable(%position) {
	%character = getChunkContainer().getCharacter(%position + {0; 0; 1});
	if(isObject(%character)) {
		return %character;
	}
	return 0;
}

addKeybind("chunk.rotateClockwise", "q", "onRotateClockwise");
addKeybind("chunk.rotateClockwise", "d-pad-left", "onRotateClockwise");
function onRotateClockwise(%state) {
	if(%state) {
		getChunkContainer().setRotation((getChunkContainer().getRotation() + 1) % 4);
	}
}

addKeybind("chunk.rotateCounterClockwise", "e", "onRotateCounterClockwise");
addKeybind("chunk.rotateCounterClockwise", "d-pad-right", "onRotateCounterClockwise");
function onRotateCounterClockwise(%state) {
	if(%state) {
		%rotation = getChunkContainer().getRotation() - 1;
		if(%rotation < 0) {
			%rotation += 4;
		}
		getChunkContainer().setRotation(%rotation);
	}
}

addKeybind("unit.gamepadPressTile", "b-button", "onGamepadPressTile");
function onGamepadPressTile(%state) {
	if(!%state) {
		return;
	}

	%position = $Unit::HoveredTile;
	if(!isTileSelectable(%position)) {
		%selectedCharacter = getChunkContainer().getSelectedCharacter();
		if(isObject(%selectedCharacter)) {
			%selectedCharacter.move(%position);
		}
	}
}

addKeybind("unit.gamepadUseAbility", "a-button", "onGamepadUseAbility");
function onGamepadUseAbility(%state) {
	if(!%state) {
		return;
	}

	%selectedCharacter = getChunkContainer().getSelectedCharacter();
	if(isObject(%selectedCharacter) && %selectedCharacter.selectedAbility.usable($Unit::SelectedTarget)) {
		%selectedCharacter.selectedAbility.use($Unit::SelectedTarget);

		if(!isObject($Unit::SelectedTarget)) {
			selectTarget(null);
		}
	}
}

addKeybind("unit.nextAbility", "y-button", "onNextAbility");
function onNextAbility(%state) {
	if(!%state) {
		return;
	}

	%character = getChunkContainer().getSelectedCharacter();
	if(%character) {
		%character.selectNextAbility();
		playSound("Flip");
	}
}

addKeybind("unit.previousAbility", "x-button", "onPreviousAbility");
function onPreviousAbility(%state) {
	if(!%state) {
		return;
	}

	%character = getChunkContainer().getSelectedCharacter();
	if(%character) {
		%character.selectPreviousAbility();
		playSound("Flip");
	}
}

function onSelectTile(%position, %browsing) {
	if(%browsing) {
		$Unit::HoveredTile = %position;
		%character = getChunkContainer().getSelectedCharacter();
		if(isObject(%character)) {
			%path = %character.getPath(%position);
			%character.path = %path;
			if(isObject(%path)) {
				%path.showDots();
			}
		}
	}
	else {
		%character = isTileSelectable(%position);
		if(isObject(%character)) {
			if(getChunkContainer().getPlayerTeam().has(%character)) {
				getChunkContainer().selectCharacter(%character);
				playSound("SelectUnit");
			}
			else if(getChunkContainer().getEnemyTeam().has(%character)) {
				selectTarget(%character);
				playSound("SelectEnemy");
			}
		}
	}
}

function onRightClickTile(%position) {
	if(isObject(getChunkContainer().getSelectedCharacter())) {
		%character = getChunkContainer().getSelectedCharacter();
		%character.move(%position);
	}
}
