class Ability inherits SimObject;
class AbilityElement inherits HTMLElement;
class AbilityUseButtonElement inherits HTMLElement;

function AbilityElement::onClick(%this) {
	getChunkContainer().getSelectedCharacter().selectAbility(number(%this.getAttribute("ability-index")));
	playSound("Flip");
}

function AbilityUseButtonElement::onClick(%this) {
	getChunkContainer().getSelectedCharacter().selectedAbility.use($Unit::SelectedTarget);

	if(!isObject($Unit::SelectedTarget)) {
		selectTarget(null);
	}
}

function Ability::onAdd(%this) {
	%this.name = "Ability";
	%this.icon = "";
}

function Ability::roll(%this, %target) {
	if(getRandom() < %this.accuracy(%target)) {
		return true;
	}
	else {
		return false;
	}
}

// use the ability
function Ability::use(%this, %target) {
	%this.owner.addAP(-%this.cost(%target));
}

// calculate the accuracy. null means the ability does not need to satisfy an accuracy check to be used
function Ability::accuracy(%this, %target) {
	return null;
}

// calculate the AP cost
function Ability::cost(%this, %target) {
	return 0;
}

// whether or not the ability can be used
function Ability::usable(%this, %target) {
	%result = %this.owner.ap >= %this.cost(%target);
	return %result;
}

// generate the HTML description of the ability
function Ability::description(%this, %target) {
	return "";
}

// get the string for the use button
function Ability::actionName(%this, %target) {
	return "Fire";
}
