class AbilityElement inherits HTMLElement {
	function onClick(%this) {
		getChunkContainer().getSelectedCharacter().selectAbility(number(%this.getAttribute("ability-index")));
		playSound("Flip");
	}
};

class AbilityUseButtonElement inherits HTMLElement {
	function onClick(%this) {
		getChunkContainer().getSelectedCharacter().selectedAbility.use($Unit::SelectedTarget);

		if(!isObject($Unit::SelectedTarget)) {
			selectTarget(null);
		}
	}
};

class Ability inherits SimObject {
	function onAdd(%this) {
		%this.name = "Ability";
		%this.icon = "";
	}

	function roll(%this, %target) {
		if(getRandom() < %this.accuracy(%target)) {
			return true;
		}
		else {
			return false;
		}
	}

	// use the ability
	function use(%this, %target) {
		%this.owner.addAP(-%this.cost(%target));
	}

	// calculate the accuracy. null means the ability does not need to satisfy an accuracy check to be used
	function accuracy(%this, %target) {
		return null;
	}

	// calculate the AP cost
	function cost(%this, %target) {
		return 0;
	}

	// whether or not the ability can be used
	function usable(%this, %target) {
		%result = %this.owner.ap >= %this.cost(%target);
		return %result;
	}

	// generate the HTML description of the ability
	function description(%this, %target) {
		return "";
	}

	// get the string for the use button
	function actionName(%this, %target) {
		return "Fire";
	}
};