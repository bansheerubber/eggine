function Unit::move(%this, %position) {
	%unitPosition = %this.getPosition();
	if(%this.getDestinations().has(%position) && isObject(%this.path) && %this.moves >= (%distance = (%this.path.size() - 1))) {
		%this.setMoves(%this.moves - %distance);
		%this.moves -= %distance;

		%this.setPosition(%position + {0; 0; 1});
	}
}

function Unit::updateTargettingUI(%this) {
	getHTMLElementById("enemy-icons").clear();
	%html = "";
	%team = getChunkContainer().getEnemyTeam();
	for(%i = 0; %i < %team.size(); %i++) {
		%enemy = %team.get(%i);
		%raycast = raycast(%this.getPosition(), %enemy.getPosition());
		if(%raycast == null) {
			%html = %html @ "<img enemy-id=\"" @ %i @ "\" es-class=\"EnemyIconElement\" class=\"enemy-icon\" src=\"/images/alien.png\" />";
		}
	}
	getHTMLElementById("enemy-icons").createChild(%html);
}

package unit {
	function Unit::setMoves(%this, %moves) {
		Parent::setMoves(%this, %moves);

		if(%this == getChunkContainer().getSelectedCharacter()) {
			%this.getDestinations().showBorder(); // re-render border if we move
			%this.path = %this.getPath($Unit::HoveredTile);
			if(%this.path) {
				%this.path.showDots();
			}
		}
	}

	function Unit::setPosition(%this, %position) {
		Parent::setPosition(%this, %position);

		if(%this == getChunkContainer().getSelectedCharacter()) {
			%this.getDestinations().showBorder(); // re-render border if we move
			%this.path = %this.getPath($Unit::HoveredTile);
			if(%this.path) {
				%this.path.showDots();
			}
			%this.updateTargettingUI();
		}
	}

	function ChunkContainer::selectCharacter(%this, %character) {
		selectTarget(null); // reset target selection
		
		%test = getChunkContainer().getSelectedCharacter();
		if(isObject(%test)) {
			%test.getDestinations().hideBorder();
			%test.path = %test.getPath($Unit::HoveredTile);
		}
		
		Parent::selectCharacter(%this, %character);

		if(%character.maxMoves == null) {
			%character.maxMoves = 5;
			%character.moves = 5;
		}

		%character.updateTargettingUI();
		%character.getDestinations(true).showBorder();
	}
};
